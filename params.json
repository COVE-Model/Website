{"name":"COVE","tagline":"COastal Vector Evolution Model - A vector-based coastline evolution model","body":"# Welcome to the COVE webpage\r\nCOastal Vector Evolution Model - A vector-based coastline evolution model\r\n\r\n## Introduction\r\nCOVE is a numerical model for the evolution of soft sediment coastlines due to alongshore sediment transport at mesoscales (km/decades). It is based on the so called ‘one-line’ concept allowing the coast to be represented using a single line, assuming that depth contours are parallel down to the bottom of the shoreface. The model differs from previous approaches in that it represents the shoreface using polygonal rather than rectilinear cells, allowing the model to handle coastlines with high planform curvature.\r\n\r\nThe model was presented and used in a paper accepted for publication in a paper on the evolution of crenulate bays in Journal of Geophysical Research – Earth Surface. We will post a link to the paper here once it has been published.\r\nModel development is lead by Martin D. Hurst. Andrew Barkwith, Michael A. Ellis, Christopher W. Thomas and A. Brad Murray are contributors.\r\n\r\nThe model is intended for research purposes. If you are interested in working with COVE, we would encourage you to get in touch and work with us.\r\n\r\n## Getting Started\r\nThis code has been written to work in a Linux environment, and has not been tested on Mac or Windows (yet). The code is documented using Doxygen and the resulting documentation can be accessed at [COVE Doxygen Documentation](https://urlsaver.html). \r\n\r\n#### Download the model\r\nClick the link at the top of the page to download a zip or taf.gz archive containing the model code. Once downloaded, extract the contents to an appropriate work-space.\r\n\r\n#### Compiling the code\r\nThe code can be compiled in a Linux environment from the command line, using one of the makefiles. These are contained in the \"driver_files\" subdirectory. The driver files are C++ scripts that control the initiation, running and saving of a COVE model run. In this tutorial we will use the example for running a spiral bay as used in Hurst et al. (accepted manuscript). \r\n\r\nIn a terminal, navigate to the driver_file subdirectory\r\n```bash\r\nCOVE$ cd driver_files\r\n```\r\nCompile COVE for running a spiral bay by launching the makefile:\r\n```bash\r\nCOVE/driver_files$ make -f spiral_bay_make.make\r\n```\r\nThis will create an executable spiral_bay.out which can be launched from the command line to run the model. First, let's move the executable to the parent directory, and navigate to the same directory:\r\n```bash\r\nCOVE/driver_files$ mv spiral_bay.out ..\r\nCOVE/driver_files$ cd ..\r\n```\r\n\r\n#### Running the model\r\nThe file spiral_bay.out generated by compiling the code can be launched from the command line:\r\n```zsh\r\nCOVE/driver_files$ ./spiral_bay.out\r\n```\r\nRunning it in this way will result in it terminating with an error, which will tell you that the program requires a number of input arguments in order to run. In the spiral bay example, the offshore wave climate is represented with three Gaussian distributions, for wave period, height and direction. Each of these is described by a mean and standard deviation, and these are fed to the model as arguments. To run the model with mean wave period of 6 seconds, standard deviation 1 second, mean wave height 1 metre, standard deviation 0.1 metre, and mean wave direction 035<sup>o</sup> and standard deviation 25<sup>o</sup>:\r\n```sh\r\nCOVE/driver_files$ ./spiral_bay.out 6 1 1. 0.1 35 25\r\n```\r\nThe model should then run for a hundred years. This example evolves a crenulate-shaped bay from a straight initial coastline between two fixed headlands or sea walls. Sediment is transported out of the model domain by alongshore sediment flux and the shoreline gradually adjusts to the distribution of wave directions. The bay eventually reaches a state of equilibrium where the net alongshore flux is close to zero everywhere. The model is setup to run for 100 years, more than enough time for an equilibrium bay configuration to form.\r\n\r\nWhile running the model will print the current model time to screen, it may also print some other messages, particularly including intersections in the coastline. The intersection analysis detects when the coastline intersects itself, such as when it erodes back behind the headland. Once this has happened the coastline is prevented from eroding any further.\r\n\r\n#### Plotting the results\r\nWe make plots of the resulting coastline evolution using the python [matplotlib](http://matplotlib.org/) library. To use them you will need a python IDE such as [Spyder](https://github.com/spyder-ide/spyder). A series of plotting functions are included in the subdirectory plotting_functions. To plot the results of your spiral bay model run, open the file plot_coastline_evolution_figure.py in your favourite python IDE, and run.\r\n\r\n## Modifying the model\r\nMore text goes here","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}